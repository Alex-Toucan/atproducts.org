---

---

<html class="h-100" lang="en">
  <head>
    <title>Blue Ball Machine</title>
    <link rel="stylesheet" href="/static/bootstrap.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.min.css">
    <link rel="shortcut icon" type="image/png" href="/media/favicon/favicon.png">
    <link rel="apple-touch-icon" sizes="180x180" href="/media/favicon/apple-touch-icon.png">
    <link rel="icon" type="image/png" href="/media/favicon/favicon.png">
    <link rel="icon" type="image/png" href="/media/favicon/android-chrome-192x192.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/media/favicon/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/media/favicon/favicon-16x16.png">
    <link rel="mask-icon" href="/media/favicon/safari-pinned-tab.svg" color="#5bbad5">
    <meta property="og:image" content="/media/favicon/iconembed.png">
    <meta name="twitter:image" content="/media/favicon/iconembed.png">
    <meta name="msapplication-TileColor" content="#da532c">
    <link rel="manifest" href="/media/favicon/site.webmanifest">
    <meta charset="UTF-8">
    <meta name="title" content="Blue Ball Machine">
    <meta name="description" content="Blue Ball Machine; creates blue balls.">
    <meta name="twitter:card" content="summary">
    <meta name="twitter:site" content="@ATProductsLLC">
    <meta name="twitter:creator" content="@ATProductsLLC">
    <meta name="twitter:title" content="Blue Ball Machine">
    <meta name="twitter:description" content="Blue Ball Machine; creates blue balls.">
    <meta name="author" content="Alex Toucan">
    <meta property="og:title" content="Blue Ball Machine">
    <meta property="og:description" content="Blue Ball Machine; creates blue balls.">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <style>
      body {
        background: url(/media/images/image.gif);
      }
    </style>

    <style>
      @keyframes fadeIn {
        from { opacity: 0; }
        to { opacity: 1; }
      }

      @keyframes fadeOut {
        from { opacity: 1; }
        to { opacity: 0; }
      }

      .fade-in {
        animation: fadeIn 1s forwards;
      }

      .fade-out {
        animation: fadeOut 1s forwards;
      }
    </style>

  </head>
  <body class="h-100">

    <div class="position-fixed bottom-0 end-0 mb-3 me-3">
      <button class="btn btn-secondary py-2 d-flex align-items-center shadow-lg" id="bd-audio" type="button" aria-expanded="false">
        <span class="audio-icon-active">
          <i class="my-1 bi bi-volume-mute-fill"></i>
        </span>
        <span class="visually-hidden" id="bd-audio-text">Toggle audio</span>
      </button>
    </div>

    <script>
      (() => {
        'use strict';
    
        let audio = null;
    
        const setCookie = (name, value, days) => {
          const date = new Date();
          date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
          const expires = `; expires=${date.toUTCString()}`;
          document.cookie = `${name}=${value || ''}${expires}; path=/`;
        };
    
        const getCookie = (name) => {
          const nameEQ = `${name}=`;
          const ca = document.cookie.split(';');
          for (let i = 0; i < ca.length; i++) {
            let c = ca[i];
            while (c.charAt(0) === ' ') c = c.substring(1, c.length);
            if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);
          }
          return null;
        };
    
        const playAudio = () => {
          if (!audio) {
            audio = new Audio('/media/images/sound.mp3');
            audio.loop = true;
            // Update Media Session metadata
            if ('mediaSession' in navigator) {
              navigator.mediaSession.metadata = new MediaMetadata({
                title: 'Blue Ball Machine',
                artist: 'Alex Toucan',
                album: 'Blue Ball Machine Soundtrack',
                artwork: [
                  { src: '/media/favicon/android-chrome-192x192.png', sizes: '192x192', type: 'image/png' },
                  { src: '/media/favicon/apple-touch-icon.png', sizes: '180x180', type: 'image/png' },
                  { src: '/media/favicon/favicon-32x32.png', sizes: '32x32', type: 'image/png' },
                  { src: '/media/favicon/favicon-16x16.png', sizes: '16x16', type: 'image/png' }
                ]
              });
              
              navigator.mediaSession.setActionHandler('play', playAudio);
              navigator.mediaSession.setActionHandler('pause', pauseAudio);
            }
          }
          audio.play().then(() => updateButtonIcon(true)).catch(error => console.log('Audio play was prevented by the browser:', error));
        };
    
        const pauseAudio = () => {
          if (audio) {
            audio.pause();
            updateButtonIcon(false);
          }
        };
    
        const toggleAudio = () => {
          const icon = document.querySelector('.audio-icon-active i');
          if (icon.classList.contains('bi-volume-up-fill')) {
            pauseAudio();
          } else {
            playAudio();
          }
        };
    
        const updateButtonIcon = (isPlaying) => {
          const icon = document.querySelector('.audio-icon-active i');
          if (isPlaying) {
            icon.classList.remove('bi-volume-mute-fill');
            icon.classList.add('bi-volume-up-fill');
          } else {
            icon.classList.remove('bi-volume-up-fill');
            icon.classList.add('bi-volume-mute-fill');
          }
        };
    
        const showNotification = () => {
          const notification = document.getElementById('audio-notification');
          if (notification) {
            notification.style.display = 'block';
            notification.classList.add('fade-in');
          }
        };
    
        const hideNotification = () => {
          const notification = document.getElementById('audio-notification');
          if (notification) {
            notification.classList.add('fade-out');
            notification.addEventListener('animationend', () => {
              notification.style.display = 'none';
            });
          }
        };
    
        window.addEventListener('load', () => {
          const audioButton = document.getElementById('bd-audio');
          const closeButton = document.getElementById('close-notification');
          audioButton.addEventListener('click', () => {
            toggleAudio();
            hideNotification();
          });
          closeButton.addEventListener('click', () => {
            hideNotification();
            setCookie('audioNotificationDismissed', 'true', 7);
          });
    
          if (!getCookie('audioNotificationDismissed')) {
            showNotification();
          }
    
          if ('mediaSession' in navigator) {
            navigator.mediaSession.setActionHandler('play', () => {
              playAudio();
              hideNotification();
            });
            navigator.mediaSession.setActionHandler('pause', () => {
              pauseAudio();
            });
          }
        });
      })();
    </script>
    

  </body>
</html>
