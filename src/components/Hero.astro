const Hero = ({ id, title, primaryHref, primaryText, secondaryHref, secondaryText, imageSrc, imageWidth, minImageWidth, numLinks, /* other props */ }) => {
    const renderSecondaryButtons = () => {
        if (!secondaryHref || !secondaryText || secondaryHref.length !== secondaryText.length) return null;

        return secondaryHref.map((href, index) => (
            <a href={href} className="btn btn-secondary col-md" key={index}>{secondaryText[index]}</a>
        ));
    };

    const renderIconLinks = (id) => {
        const iconLinks = [];
        for (let i = 1; i <= numLinks; i++) {
            const href = `href${i}`;
            const icon = `icon${i}`;
            const link = `<a href={${href}} target='_blank' rel='noopener noreferrer' class='link-hero fs-7' data-bs-toggle='tooltip' data-bs-placement='bottom' data-bs-title=''><i class={'bi bi-' + ${icon}}></i></a>`;
            iconLinks.push(link);
        }
        return iconLinks;
    };

    return (
        <div id={`intro-${id}`} className={`hero hero-${id} text-center mb-3`} data-bs-theme="dark">
            <div className="hero-back h-100 p-3 position-relative">
                <div className="hero-filter w-100 align-items-center d-flex justify-content-center my-466 text-center">
                    <div className="text-white">
                        <div>
                            {/* Image and title */}
                            <img src={imageSrc} width={imageWidth} alt="icon" style={{ minWidth: minImageWidth || "150px" }} />
                            <h1 className="display-3 fw-bold mt-mmd-2 ps-md-3 d-block d-md-inline align-middle">{title}</h1>
                        </div>
                        <div className="mx-auto justify-content-between container" id={`links-${id}`}>
                            <div className="d-md-flex d-grid gap-2">
                                <a href={primaryHref} className="btn btn-primary col-md">{primaryText}</a> {renderSecondaryButtons()}
                            </div>
                            <div className="mt-2 p-1 d-flex justify-content-center gap-3 bg-dark rounded-2" id={`icons-${id}`}>
                                {renderIconLinks(id).map((link, index) => (
                                    <div key={index} dangerouslySetInnerHTML={{ __html: link }} />
                                ))}
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    );
};
