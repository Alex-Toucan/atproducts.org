---
const { title, heroid, icon, bulletin, description, keywords, author, additionalContent } = Astro.props;
---
<!DOCTYPE html>
<html class="fixedtopnavimage" lang="en">
  <head>
      <title>{title}</title> 
      <link rel="stylesheet" href="/static/cookie.css">
      <link rel="stylesheet" href="/static/bootstrap.css">
      <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.min.css">
      <link rel="preload" as="style" href="/static/bootstrap.css">
      {heroid ?
        <Fragment>
        <link rel="preload" as="image" href={`/media/images/hero=${heroid}.webp`}>
        </Fragment>
        :
        <Fragment>
        <link rel="preload" as="image" href={`/media/images/hero.webp`}>
        </Fragment>
      }
      {bulletin && bulletin.map(({ bulletinImage }, index) => (
        bulletinImage ? (
            <link key={index} rel="preload" as="image" href={`/media/slideshow/${bulletinImage}`} />
        ) : null
      ))}
      <!-- Using a traditional if/else for icon handling -->
<Fragment>
  {(() => {
    if (icon) {
      return (
        <Fragment>
          <link rel="icon" href={`/media/images/${icon}`} />
          <meta property="og:image" content={`/media/images/${icon}`} />
        </Fragment>
      );
    } else {
      return (
        <Fragment>
          <link rel="shortcut icon" type="image/png" href="/media/favicon/favicon.png" />
          <!-- Other default icon links -->
          <meta property="og:image" content="/media/favicon/iconembed.png" />
          <meta name="msapplication-TileColor" content="#da532c" />
        </Fragment>
      );
    }
  })()}
</Fragment>
      <link rel="manifest" href="/media/favicon/site.webmanifest">
      <meta charset="UTF-8">
      <meta name="title" content={title}>
      <meta name="description" content={description}>
      {keywords && (
        <meta name="keywords" content={keywords}>
      )}
      {author && (
        <meta name="author" content={author}>
      )}
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <Fragment set:html={additionalContent} />
      <script src="/static/darkmode.js" is:inline></script>
  </head>
  <body class="fixedtopnavimage">
      <div id="page">
